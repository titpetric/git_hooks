#!/usr/bin/php
<?php

if (in_array("--about", $argv)) {
	echo "Check xml files for syntax errors";
	die;
}

$return = 0;

$output = array();
exec('git rev-parse --verify HEAD 2> /dev/null', $output, $return);

$against = '4b825dc642cb6eb9a060e54bf8d69288fbee4904'; // git empty tree
if ($return == 0) {
	$against = 'HEAD';
}

$changed_files = array();
exec("git diff-index --cached --name-status $against | egrep '^(A|M)' | awk '{print $2;}'", $changed_files);

function display_xml_error($error, $xml)
{
	$line = $xml[$error->line - 1];
	$return = array();
	$type = "Unknown";
	$types = array(LIBXML_ERR_WARNING => "Warning", LIBXML_ERR_ERROR => "Error", LIBXML_ERR_FATAL => "Fatal");
	if (isset($types[$error->level])) {
		$type = $types[$error->level];
	}
	$return[] = "  - ".$type . " (line $error->line, col $error->column): ".trim($error->message);
	return implode("\n", $return) . "\n";
}

libxml_use_internal_errors(true);

$exit_status = 0;
foreach ($changed_files as $file) {
	if (!preg_match('/\.xml$/', $file)) {
		continue;
	}
	$xmlstr = file_get_contents($file);
	$contents = simplexml_load_string($xmlstr);
	$xmlstr = explode("\n", $xmlstr);
	if ($contents === false) {
		echo "Syntax error in ".$file."\n";
		$errors = libxml_get_errors();
		foreach ($errors as $error) {
			echo display_xml_error($error, $xmlstr);
		}
		libxml_clear_errors();
		$exit_status = 1;
	}
}

exit($exit_status);